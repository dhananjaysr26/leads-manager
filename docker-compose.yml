# Ref:  https://dev.to/erezhod/setting-up-a-nestjs-project-with-docker-for-back-end-development-30lg
#       https://github.com/erezhod/nestjs-docker-tutorial
#       https://jdlm.info/articles/2019/09/06/lessons-building-node-app-docker.html

version: '3.9'

services:
  SERVICE_APP_NAME-api:
    # container_name: "${APP_NAME:-fitpage}-api"
    # image: "${APP_NAME:-fitpage}-api:${IMAGE_TAG:-v1}"
    image: "REGISTRY/SERVICE_APP_NAME:TAG"
    # build:
    #   context: .
    #   # target: "${NODE_ENV:-development}"
    #   dockerfile: "${DOCKERFILE:-./Dockerfile}"
    #   args:
    #     - "NODE_ENV=${NODE_ENV:-development}"
    # command: "npm run start:debug"
    command: sh -c "sh /home/node/app/docker-entrypoint.sh main"
    env_file:
      - .env
    ports:
      - ${API_PORT_H:-127.0.0.1:3000}:${API_PORT_C:-3000}
    depends_on:
      - ${APP_NAME:-testingapp}-postgres
      - ${APP_NAME:-testingapp}-redis
    networks:
      - SERVICE_NETWORK
    # volumes:
    #   - "${API_VOLUME:-.:/usr/src/app}"
    #   - /usr/src/app/node_modules
    restart: "${DOCKER_RESTART_POLICY:-always}"
    stop_grace_period: "3s"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.SERVICE_APP_NAME.rule=Host(`URL`) && Pathprefix(`/services`)"
      - "traefik.http.routers.SERVICE_APP_NAME.entrypoints=websecure"
      - "traefik.http.routers.SERVICE_APP_NAME.tls.certresolver=letsencrypt"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${PORT}/services/healthcheck"]
      interval: "10s"
      timeout: "3s"
      start_period: "5s"
      retries: 3

  SERVICE_APP_NAME-redis:
    # container_name: "${REDIS_CONTAINER_NAME:-fitpage}-redis"
    image: redis:6.2.6-alpine3.15
    ports:
      - ${REDIS_PORT_H:-8637}:${REDIS_PORT_C:-8637}
    volumes:
      - "${REDIS_VOLUME:-./data/redis_data:/var/lib/redis}"
    #   - ${REDIS_DATA}/redis.conf:/usr/local/etc/redis/redis.conf
    # environment:
    #   - ${REDIS_REPLICATION_MODE}=master
    command: redis-server --requirepass REDIS_PASSWORD --port REDIS-PORT
    # command: redis-server --port REDIS-PORT
    restart: "${DOCKER_RESTART_POLICY:-always}"
    stop_grace_period: "3s"
    networks:
      - SERVICE_NETWORK

  SERVICE_APP_NAME-postgres:
    # container_name: "${APP_NAME:-testingapp}-postgres"
    image: postgres:13.7-alpine3.16
    command: -p ${POSTGRES_PORT_C:-5432} -c stats_temp_directory=/tmp
    env_file:
      - .postgres.env
    networks:
      - SERVICE_NETWORK
    volumes:
      - "${POSTGRES_VOLUME:-./data/pg_data:/var/lib/postgresql/data}"
    restart: "${DOCKER_RESTART_POLICY:-always}"
    stop_grace_period: "3s"

  SERVICE_APP_NAME-bull-workers:
    # container_name: "${APP_NAME:-testingapp}-bull-workers"
    image: "REGISTRY/SERVICE_APP_NAME:TAG"
    command: sh -c "sh /home/node/app/docker-entrypoint.sh worker"
    env_file:
      - .env
    expose:
      - ${WORKER_HTTP_PORT:-3999}
    networks:
      - SERVICE_NETWORK
    restart: "${DOCKER_RESTART_POLICY:-always}"
    stop_grace_period: "3s"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.SERVICE_APP_NAME-bull-workers.rule=Host(`URL`) && Pathprefix(`/services-bull`)"
      - "traefik.http.routers.SERVICE_APP_NAME-bull-workers.entrypoints=websecure"
      - "traefik.http.routers.SERVICE_APP_NAME-bull-workers.tls.certresolver=letsencrypt"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${WORKER_HTTP_PORT}/services-bull/ping"]
      interval: "10s"
      timeout: "3s"
      start_period: "5s"
      retries: 3

  SERVICE_APP_NAME-cron:
    # container_name: "${APP_NAME:-testingapp}-cron"
    image: "REGISTRY/SERVICE_APP_NAME:TAG"
    command: sh -c "sh /home/node/app/docker-entrypoint.sh cron"
    env_file:
      - .env
    expose:
      - ${CRON_HTTP_PORT:-3999}
    networks:
      - SERVICE_NETWORK
    restart: "${DOCKER_RESTART_POLICY:-always}"
    stop_grace_period: "3s"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.SERVICE_APP_NAME-cron.rule=Host(`URL`) && Pathprefix(`/services-cron`)"
      - "traefik.http.routers.SERVICE_APP_NAME-cron.entrypoints=websecure"
      - "traefik.http.routers.SERVICE_APP_NAME-cron.tls.certresolver=letsencrypt"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${CRON_HTTP_PORT}/services-cron/ping"]
      interval: "10s"
      timeout: "3s"
      start_period: "5s"
      retries: 3

networks:
  SERVICE_NETWORK:
    name: SERVICE_NETWORK
    driver: bridge

volumes:
  node_modules:
